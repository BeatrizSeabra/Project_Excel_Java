/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csheets.ext.networkgame.ui;

import csheets.ext.networkgame.NetworkGameController;
import csheets.ext.networkgame.TicTacToe;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author PedroRos√°rio
 */
public class TicTacToeUI extends javax.swing.JPanel {

    public TicTacToe game;

    /**
     * Creates new form TicTacToeUI
     *
     * @param game
     */
    public TicTacToeUI(TicTacToe game) {
        initComponents();
        this.game = game;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(400, 400));
        setLayout(new java.awt.GridLayout(3, 3));

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);

        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4);

        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5);

        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6);

        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        add(jButton7);

        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        add(jButton8);

        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        add(jButton9);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (jButton1.getText().equals("")) {
            jogada(jButton1, "1");
        } else {
            JOptionPane.showMessageDialog(this, null, "Invalid Move", JOptionPane.ERROR_MESSAGE);
        }
        if (hasWinner()) {
            String message = "GM" + "W" + jButton1.getText();
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (jButton8.getText().equals("")) {
            jogada(jButton8, "8");
        } else {
            JOptionPane.showMessageDialog(this, null, "Invalid Move", JOptionPane.ERROR_MESSAGE);
        }
        if (hasWinner()) {
            String message = "GM" + "W" + jButton8.getText();
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tie()) {
            String message = "GM" + "T";
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jButton2.getText().equals("")) {
            jogada(jButton2, "2");
        } else {
            JOptionPane.showMessageDialog(this, null, "Invalid Move", JOptionPane.ERROR_MESSAGE);
        }
        if (hasWinner()) {
            String message = "GM" + "W" + jButton2.getText();
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tie()) {
            String message = "GM" + "T";
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jButton3.getText().equals("")) {;
            jogada(jButton3, "3");
        } else {
            JOptionPane.showMessageDialog(this, null, "Invalid Move", JOptionPane.ERROR_MESSAGE);
        }
        if (hasWinner()) {
            String message = "GM" + "W" + jButton3.getText();
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            NetworkGameController.mainWindow.dispose();
        }
        if (tie()) {
            String message = "GM" + "T";
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (jButton4.getText().equals("")) {
            jogada(jButton4, "4");
        } else {
            JOptionPane.showMessageDialog(this, null, "Invalid Move", JOptionPane.ERROR_MESSAGE);
        }
        if (hasWinner()) {
            String message = "GM" + "W" + jButton4.getText();
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tie()) {
            String message = "GM" + "T";
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (jButton5.getText().equals("")) {
            jogada(jButton5, "5");
        } else {
            JOptionPane.showMessageDialog(this, null, "Invalid Move", JOptionPane.ERROR_MESSAGE);
        }
        if (hasWinner()) {
            String message = "GM" + "W" + jButton5.getText();
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tie()) {
            String message = "GM" + "T";
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (jButton6.getText().equals("")) {
            jogada(jButton6, "6");
        } else {
            JOptionPane.showMessageDialog(this, null, "Invalid Move", JOptionPane.ERROR_MESSAGE);
        }
        if (hasWinner()) {
            String message = "GM" + "W" + jButton6.getText();
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tie()) {
            String message = "GM" + "T";
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (jButton7.getText().equals("")) {
            jogada(jButton7, "7");
        } else {
            JOptionPane.showMessageDialog(this, null, "Invalid Move", JOptionPane.ERROR_MESSAGE);
        }
        if (hasWinner()) {
            String message = "GM" + "W" + jButton7.getText();
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (jButton9.getText().equals("")) {
            jogada(jButton9, "9");
        } else {
            JOptionPane.showMessageDialog(this, null, "Invalid Move", JOptionPane.ERROR_MESSAGE);
        }
        if (hasWinner()) {
            String message = "GM" + "W" + jButton9.getText();
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if (tie()) {
            String message = "GM" + "T";
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jButton1;
    public static javax.swing.JButton jButton2;
    public static javax.swing.JButton jButton3;
    public static javax.swing.JButton jButton4;
    public static javax.swing.JButton jButton5;
    public static javax.swing.JButton jButton6;
    public static javax.swing.JButton jButton7;
    public static javax.swing.JButton jButton8;
    public static javax.swing.JButton jButton9;
    // End of variables declaration//GEN-END:variables

    private void jogada(JButton button, String c) {
        String message = "GM";
        try {
            game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
        } catch (UnknownHostException ex) {
            Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (game.isServer) {
            button.setText("X");
            message += button.getText() + c;
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            button.setText("O");
            message += button.getText() + c;
            try {
                game.s.sendData(message.getBytes(), game.address.getHostName(), 7777);
            } catch (UnknownHostException ex) {
                Logger.getLogger(TicTacToeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private boolean hasWinner() {
        if (!jButton1.getText().equals("") && jButton1.getText().equals(jButton2.getText()) && jButton1.getText().equals(jButton3.getText())
                || !jButton1.getText().equals("") && jButton1.getText().equals(jButton4.getText()) && jButton1.getText().equals(jButton7.getText())
                || !jButton1.getText().equals("") && jButton1.getText().equals(jButton5.getText()) && jButton1.getText().equals(jButton9.getText())
                || !jButton4.getText().equals("") && jButton4.getText().equals(jButton5.getText()) && jButton4.getText().equals(jButton6.getText())
                || !jButton7.getText().equals("") && jButton7.getText().equals(jButton8.getText()) && jButton7.getText().equals(jButton9.getText())
                || !jButton2.getText().equals("") && jButton2.getText().equals(jButton5.getText()) && jButton2.getText().equals(jButton8.getText())
                || !jButton3.getText().equals("") && jButton3.getText().equals(jButton6.getText()) && jButton3.getText().equals(jButton9.getText())
                || !jButton3.getText().equals("") && jButton3.getText().equals(jButton5.getText()) && jButton3.getText().equals(jButton7.getText())) {
            return true;
        }
        return false;
    }
    
    public boolean tie() {
        if(!jButton1.getText().equals("") && !jButton2.getText().equals("") && !jButton3.getText().equals("") && !jButton4.getText().equals("") && !jButton5.getText().equals("")
           && !jButton6.getText().equals("") && !jButton7.getText().equals("") && !jButton8.getText().equals("") && !jButton9.getText().equals("")){
            
            return true;
        
          }
        return false;
    }
}
